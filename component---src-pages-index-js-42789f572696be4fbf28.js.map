{"version":3,"sources":["webpack://my-gatsby-site/./src/components/post.js","webpack://my-gatsby-site/./src/components/tags.js","webpack://my-gatsby-site/./src/pages/index.js"],"names":["Component","props","data","allPost","edges","allNews","arrayTag","forEach","element","node","tags","error","console","log","filter","v","i","a","findIndex","t","slug","useState","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","loadRef","useRef","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","currentLength","nextResults","isMore","pageTitle","className"],"mappings":"yNAGmBA,YCAAA,Y,SC0GnB,EAtGkB,SAACC,GAEjB,IAAMC,EAAOD,EAAMC,KAAKC,QAAQC,MAI1BC,EAAUH,EACZI,EAAW,GACfD,EAAQE,SAAQ,SAAAC,GACd,IACEF,EAAQ,kBAAOA,IAAP,OAAoBE,EAAQC,KAAKC,OACzC,MAAOC,GACPC,QAAQC,IAAI,QAAQF,OAIxBL,EAAWA,EAASQ,QAAO,SAACC,EAAEC,EAAEC,GAAL,OAASA,EAAEC,WAAU,SAAAC,GAAC,OAAGA,EAAEC,OAASL,EAAEK,UAASJ,KAG1E,OAAwBK,eAAS,OAAIhB,EAAQiB,MAAM,EAfrC,KAePC,EAAP,KAAaC,EAAb,KAGA,GAAgCH,eAAS,GAAlCI,EAAP,KAAiBC,EAAjB,KAGA,GAA8BL,cAAShB,EAAQsB,OArBjC,GAqBPC,EAAP,KAAgBC,EAAhB,KAGMC,GAAUC,cAGVC,EAAiB,SAACC,GACPA,EAAS,GACbC,gBACTR,GAAY,IAoChB,OA/BAS,gBAAU,WACR,IAKMC,EAAW,IAAIC,qBAAqBL,EAL5B,CACZM,KAAM,KACNC,WAAY,OACZC,UAAW,IAGTV,EAAQW,SACVL,EAASM,QAAQZ,EAAQW,WAE1B,KAGHN,gBAAU,WACR,GAAIV,GAAYG,EAAS,CACvB,IAAMe,EAAgBpB,EAAKI,OAErBiB,EADSD,EAAgBtC,EAAQsB,OAEnCtB,EAAQiB,MAAMqB,EAAeA,EArDvB,GAsDN,GACJnB,EAAQ,GAAD,eAAKD,IAAL,OAAcqB,KACrBlB,GAAY,MAEb,CAACD,EAAUG,KAGdO,gBAAU,WACR,IAAMU,EAAStB,EAAKI,OAAStB,EAAQsB,OACrCE,EAAWgB,KACV,CAACtB,IAGF,gBAAC,IAAD,CAAQuB,UAAU,aAChB,gBAAC,IAAD,MACA,uBAAKC,UAAU,eACT,uBAAKA,UAAU,qBAEX,yBACE,wBAAMA,UAAU,WAAhB,UADF,kBAKA,yBACE,wBAAMA,UAAU,WAAhB,aADF","file":"component---src-pages-index-js-42789f572696be4fbf28.js","sourcesContent":["import React, { Component }  from 'react';\r\nimport { Link } from \"gatsby\"\r\n\r\nclass Post extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article key={this.props.post} className=\"p-4 border-bottom d-flex\">\r\n                <figure className=\"pe-4\">\r\n                    <img src={this.props.post.thumbnail_url} alt=\"Trulli\" className=\"post-img\" />\r\n                </figure>\r\n                <div className=\"post-info\">\r\n                    <p><span>{this.props.post.created_at}</span></p>\r\n                    <h2 className=\"fs-5 pt-3\">\r\n                        <Link className=\"text-decoration-none fw-bold post-title\" to={\"/post/\" + this.props.post.slug}>\r\n                            {this.props.post.title}\r\n                        </Link>\r\n                    </h2>\r\n                    <p className=\"pt-3\">\r\n                        {this.props.post.content.substring(0, 255)}\r\n                    </p>\r\n                    <p className=\"pt-3\">\r\n                        {this.props.post.tags.map((tag, index) => {\r\n                            return <Link key={index} className=\"text-decoration-none btn btn-tags me-2\" to={\"/tags/\" + tag.slug}>\r\n                            {tag.name}\r\n                            </Link>\r\n                        })}\r\n                    </p>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n","import React, { Component }  from 'react';\r\nimport { navigate } from \"gatsby\"\r\n\r\nclass Tags extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    goTagPage = (slug) => {\r\n        navigate('/tags/' + slug);\r\n    }\r\n\r\n    getClassTag = (slugPage, slug) => {\r\n        return slugPage === slug ? \"px-3 btn btn-warning\" : \"px-3 btn\"\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <ul className=\"d-flex flex-wrap p-3\">\r\n                {this.props.tags.map((node, index) => {\r\n                  return <li key={index} onClick={() => this.goTagPage(node.slug)} className={ this.getClassTag(this.props.slugPage, node.slug)}>{node.name}</li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/post'\r\nimport ListTag from '../components/tags'\r\nimport { graphql, navigate, Link } from \"gatsby\"\r\nimport SEO from '../components/seo';\r\n\r\nconst IndexPage = (props) => {\r\n  // const { data } = props;\r\n  const data = props.data.allPost.edges\r\n\r\n  const limit = 5\r\n  // Array of all news articles\r\n  const allNews = data\r\n  let arrayTag = []\r\n  allNews.forEach(element => {\r\n    try {\r\n      arrayTag = [...arrayTag, ...element.node.tags];\r\n    } catch (error) {\r\n      console.log('error',error)\r\n    }\r\n  });\r\n\r\n  arrayTag = arrayTag.filter((v,i,a)=>a.findIndex(t=>(t.slug === v.slug))===i)\r\n\r\n  // State for the list\r\n  const [list, setList] = useState([...allNews.slice(0, limit)])\r\n\r\n  // State to trigger oad more\r\n  const [loadMore, setLoadMore] = useState(false)\r\n\r\n  // State of whether there is more to load\r\n  const [hasMore, setHasMore] = useState(allNews.length > limit)\r\n\r\n  //Set a ref for the loading div\r\n  const loadRef = useRef()\r\n\r\n  // Handle intersection with load more div\r\n  const handleObserver = (entities) => {\r\n    const target = entities[0]\r\n    if (target.isIntersecting) {\r\n      setLoadMore(true)\r\n    }\r\n  }\r\n\r\n  //Initialize the intersection observer API\r\n  useEffect(() => {\r\n    var options = {\r\n      root: null,\r\n      rootMargin: \"20px\",\r\n      threshold: 1.0,\r\n    }\r\n    const observer = new IntersectionObserver(handleObserver, options)\r\n    if (loadRef.current) {\r\n      observer.observe(loadRef.current)\r\n    }\r\n  }, [])\r\n\r\n  // Handle loading more articles\r\n  useEffect(() => {\r\n    if (loadMore && hasMore) {\r\n      const currentLength = list.length\r\n      const isMore = currentLength < allNews.length\r\n      const nextResults = isMore\r\n        ? allNews.slice(currentLength, currentLength + limit)\r\n        : []\r\n      setList([...list, ...nextResults])\r\n      setLoadMore(false)\r\n    }\r\n  }, [loadMore, hasMore]) //eslint-disable-line\r\n\r\n  //Check if there is more\r\n  useEffect(() => {\r\n    const isMore = list.length < allNews.length\r\n    setHasMore(isMore)\r\n  }, [list]) //eslint-disable-line\r\n\r\n  return (\r\n    <Layout pageTitle=\"Home Page\">\r\n      <SEO />\r\n      <div className=\"m-auto main\">\r\n            <div className=\"bg-white my-2 p-4\">\r\n\r\n                <p >\r\n                  <span className=\"fw-bold\">Tướng:</span> từ điển tướng\r\n                </p>\r\n\r\n\r\n                <p>\r\n                  <span className=\"fw-bold\">Vượt map:</span> đội hình vượt ải\r\n                </p>\r\n            </div>\r\n          {/* <div className=\"bg-white my-2\">\r\n              <ListTag tags={arrayTag}></ListTag>\r\n          </div>\r\n\r\n          <div className=\"bg-white my-2\">\r\n            {list.map((node, index) => {\r\n              return <Post key={index} post={node.node} />\r\n            })}\r\n          </div>\r\n          <div ref={loadRef}>\r\n            {hasMore ? <p>Loading...</p> : <p>No more results</p>}\r\n          </div>*/}\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query MyQuery {\r\n    allPost(\r\n      filter: {created_at: {ne: null}}\r\n      sort: {fields: created_at, order: DESC}\r\n    ) {\r\n      edges {\r\n        node {\r\n          title\r\n          thumbnail_url\r\n          content\r\n          slug\r\n          created_at\r\n          updated_at\r\n          tags{\r\n            name\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}