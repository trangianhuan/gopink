{"version":3,"sources":["webpack://my-gatsby-site/./src/components/layout.js","webpack://my-gatsby-site/./src/components/post.js","webpack://my-gatsby-site/./src/components/tags.js","webpack://my-gatsby-site/./src/templates/tags-list.js"],"names":["children","paramSearch","window","URLSearchParams","location","search","get","useState","param","setParam","id","className","to","width","height","alt","src","autoComplete","type","placeholder","value","onChange","event","target","console","log","onClick","fetch","then","response","json","resultData","navigate","state","data","Post","props","render","key","this","post","thumbnail_url","created_at","slug","title","content","substring","tags","map","tag","index","name","Component","Tags","goTagPage","getClassTag","slugPage","node","allPost","edges","pageContext","Posts","allTags","arrayTag","forEach","element","error","filter","v","i","a","findIndex","t","allNews","slice","list","setList","loadMore","setLoadMore","length","hasMore","setHasMore","loadRef","useRef","handleObserver","entities","isIntersecting","useEffect","observer","IntersectionObserver","root","rootMargin","threshold","current","observe","currentLength","nextResults","isMore","ref"],"mappings":"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","file":"component---src-templates-tags-list-js-3edb75175a0af749eee2.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Link, useStaticQuery, graphql, navigate } from 'gatsby'\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  let paramSearch = '';\r\n  if (typeof window !== 'undefined') {\r\n    const params = new URLSearchParams(window.location.search);\r\n    paramSearch = params.get(\"param\") || '';\r\n  } else {\r\n    paramSearch = '';\r\n  }\r\n\r\n  const [param, setParam] = useState(paramSearch)\r\n\r\n  const handleChange = (event) => {\r\n    setParam(event.target.value);\r\n    console.log(param, event.target.value)\r\n  }\r\n\r\n  const doSearch = () => {\r\n\r\n    fetch(`https://jsonplaceholder.typicode.com/todos?userId=${param}`)\r\n      .then(response => response.json()) // parse JSON from request\r\n      .then(resultData => {\r\n        navigate('/search' + '?param=' + param, {\r\n          state:{\r\n            data: resultData\r\n          }\r\n        });\r\n      })\r\n  }\r\n\r\n  return (\r\n    <main >\r\n      <div id=\"header\">\r\n        <div className=\"toolbar-inside\">\r\n              <div className=\"header-container\">\r\n                <div className=\"header-container-left\">\r\n                    <div className=\"toolbar-logo toolbar-subMenu-box header-fl\">\r\n                        <Link to=\"/\">\r\n                            <img width=\"24px\" height=\"24px\" alt=\"shortpage\" src=\"https://trangianhuan.github.io/icon/awesome-icons/svg/user-shape.svg\" />\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"header-container-middle\">\r\n                    <div className=\"toolbar-search onlySearch\">\r\n                        <div className=\"toolbar-search-container\">\r\n                            <input id=\"toolbar-search-input\" autoComplete=\"off\"\r\n                              type=\"text\"\r\n                              placeholder=\"search\"\r\n                              value={param}\r\n                              onChange={handleChange}/>\r\n                            <button id=\"toolbar-search-button\" onClick={() => doSearch()}></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"header-container-right\">\r\n                <div className=\"toolbar-btns onlyUser\"></div>\r\n                </div>\r\n              </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container\">\r\n        {children}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import React, { Component }  from 'react';\r\nimport { Link } from \"gatsby\"\r\n\r\nclass Post extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article key={this.props.post} className=\"p-4 border-bottom d-flex\">\r\n                <figure className=\"pe-4\">\r\n                    <img src={this.props.post.thumbnail_url} alt=\"Trulli\" className=\"post-img\" />\r\n                </figure>\r\n                <div className=\"post-info\">\r\n                    <p><span>{this.props.post.created_at}</span></p>\r\n                    <h2 className=\"fs-5 pt-3\">\r\n                        <Link className=\"text-decoration-none fw-bold post-title\" to={\"/post/\" + this.props.post.slug}>\r\n                            {this.props.post.title}\r\n                        </Link>\r\n                    </h2>\r\n                    <p className=\"pt-3\">\r\n                        {this.props.post.content.substring(0, 255)}\r\n                    </p>\r\n                    <p className=\"pt-3\">\r\n                        {this.props.post.tags.map((tag, index) => {\r\n                            return <Link key={index} className=\"text-decoration-none btn btn-tags me-2\" to={\"/tags/\" + tag.slug}>\r\n                            {tag.name}\r\n                            </Link>\r\n                        })}\r\n                    </p>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n","import React, { Component }  from 'react';\r\nimport { navigate } from \"gatsby\"\r\n\r\nclass Tags extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    goTagPage = (slug) => {\r\n        navigate('/tags/' + slug);\r\n    }\r\n\r\n    getClassTag = (slugPage, slug) => {\r\n        return slugPage === slug ? \"px-3 btn btn-warning\" : \"px-3 btn\"\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <ul className=\"d-flex flex-wrap p-3\">\r\n                {this.props.tags.map((node, index) => {\r\n                  return <li key={index} onClick={() => this.goTagPage(node.slug)} className={ this.getClassTag(this.props.slugPage, node.slug)}>{node.name}</li>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tags\r\n","import React, { useState, useEffect, useRef } from \"react\"\r\nimport { graphql, navigate } from \"gatsby\";\r\nimport Layout from \"../components/layout\";\r\nimport ListTag from '../components/tags'\r\nimport Post from '../components/post'\r\n\r\nconst TagsPage = (props) => {\r\nconsole.log(props)\r\n\r\n    const data = props.data.allPost.edges\r\n    const slugPage = props.pageContext.slug\r\n\r\n    let Posts = props.data.allTags.edges\r\n    let arrayTag = [];\r\n\r\n    Posts.forEach(element => {\r\n      try {\r\n        arrayTag = [...arrayTag, ...element.node.tags];\r\n      } catch (error) {\r\n        console.log('error',error)\r\n      }\r\n    });\r\n\r\n    arrayTag = arrayTag.filter((v,i,a)=>a.findIndex(t=>(t.slug === v.slug))===i)\r\n\r\n    console.log(arrayTag)\r\n    const limit = 5\r\n    // Array of all news articles\r\n    const allNews = data\r\n\r\n    // State for the list\r\n    const [list, setList] = useState([...allNews.slice(0, limit)])\r\n\r\n    // State to trigger oad more\r\n    const [loadMore, setLoadMore] = useState(false)\r\n\r\n    // State of whether there is more to load\r\n    const [hasMore, setHasMore] = useState(allNews.length > limit)\r\n\r\n    //Set a ref for the loading div\r\n    const loadRef = useRef()\r\n\r\n    // Handle intersection with load more div\r\n    const handleObserver = (entities) => {\r\n        const target = entities[0]\r\n        if (target.isIntersecting) {\r\n        setLoadMore(true)\r\n        }\r\n    }\r\n\r\n    //Initialize the intersection observer API\r\n    useEffect(() => {\r\n        var options = {\r\n        root: null,\r\n        rootMargin: \"20px\",\r\n        threshold: 1.0,\r\n        }\r\n        const observer = new IntersectionObserver(handleObserver, options)\r\n        if (loadRef.current) {\r\n        observer.observe(loadRef.current)\r\n        }\r\n    }, [])\r\n\r\n    // Handle loading more articles\r\n    useEffect(() => {\r\n        if (loadMore && hasMore) {\r\n        const currentLength = list.length\r\n        const isMore = currentLength < allNews.length\r\n        const nextResults = isMore\r\n            ? allNews.slice(currentLength, currentLength + limit)\r\n            : []\r\n        setList([...list, ...nextResults])\r\n        setLoadMore(false)\r\n        }\r\n    }, [loadMore, hasMore]) //eslint-disable-line\r\n\r\n    //Check if there is more\r\n    useEffect(() => {\r\n        const isMore = list.length < allNews.length\r\n        setHasMore(isMore)\r\n    }, [list]) //eslint-disable-line\r\n\r\n    const getClassTag = (slugPage, slug) => {\r\n      return slugPage === slug ? \"px-3 btn btn-warning\" : \"px-3 btn\"\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <div className=\"m-auto main\">\r\n          <div className=\"bg-white my-2\">\r\n              <ListTag tags={arrayTag} slugPage={slugPage}/>\r\n          </div>\r\n\r\n          <div className=\"bg-white my-2\">\r\n            {list.map((node, index) => {\r\n              return <Post key={index} post={node.node} />\r\n            })}\r\n          </div>\r\n\r\n          <div ref={loadRef}>\r\n            {hasMore ? <p>Loading...</p> : <p>No more results</p>}\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\nexport default TagsPage\r\n\r\nexport const query = graphql`\r\n  query tagsListQuery($slug: String!) {\r\n    allPost(\r\n      filter: {created_at: {ne: null}, tags: {elemMatch: {slug: {eq: $slug}}}}\r\n      sort: { fields: [created_at], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          title\r\n          thumbnail_url\r\n          content\r\n          slug\r\n          created_at\r\n          updated_at\r\n          tags{\r\n            name\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allTags: allPost(\r\n        filter: {created_at: {ne: null}}\r\n        sort: {fields: created_at, order: DESC}\r\n    ) {\r\n        edges {\r\n            node {\r\n                tags{\r\n                    name\r\n                    slug\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n  }\r\n`\r\n"],"sourceRoot":""}