{"version":3,"sources":["webpack://my-gatsby-site/./src/components/img-grid.js","webpack://my-gatsby-site/./src/templates/game-tmc-map.js"],"names":["props","state","map","show","choiceMap","type","this","setState","controlShow","isShow","render","query","data","images","allImageSharp","edges","filter","edge","node","fluid","originalName","startsWith","imgName","className","index","onClick","key","id","Component","type_1","type_2","melee_1","melee_2","posts","postsData","currentMap","maps","name","post"],"mappings":"wNAoFA,E,YA9EI,WAAYA,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACTC,IAAK,GACLC,MAAM,GAJK,G,uCAQnBC,UAAA,SAAUC,GACNC,KAAKC,SAAS,CAACL,IAAKG,IACpBC,KAAKE,aAAY,I,EAGrBA,YAAA,SAAYC,GACRH,KAAKC,SAAS,CAACJ,KAAMM,K,EAGzBC,OAAA,WAAU,IAAD,OAIL,OAGI,gBAAC,KAAD,CACIC,MAAK,YAkBLD,OAAQ,SAAAE,GACJ,IAAMC,EAASD,EAAKE,cAAcC,MAAMC,QACpC,SAAAC,GAAI,OACAA,EAAKC,KAAKC,MAAMC,aAAaC,WAAW,EAAKrB,MAAMsB,YAI3D,OAAO,2BACH,uBAAKC,UAAU,oBACVV,EAAOX,KAAI,SAACgB,EAAMM,GACf,OAAO,uBAAKD,UAAU,YAAYE,QAAS,kBAAM,EAAKrB,UAAUc,EAAKA,QAAO,gBAAC,IAAD,CAAKQ,IAAKF,EAAOL,MAAOD,EAAKA,KAAKC,aAIrH,EAAKlB,MAAME,MACR,uBAAKwB,GAAG,SAASJ,UAAU,WACvB,uBAAKA,UAAU,SACX,uBAAKA,UAAU,QAAQE,QAAS,kBAAM,EAAKjB,aAAY,KAAvD,KACA,uBAAKe,UAAU,gBACX,2BACI,gBAAC,IAAD,CAAKJ,MAAO,EAAKlB,MAAMC,IAAIiB,iB,GAhEjDS,a,oBC0EtB,E,YAxEI,WAAY5B,GAAQ,IAAD,SACf,cAAMA,IAAN,MACKC,MAAQ,CACT4B,OAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,QAAS,GACTC,MAAOC,IACPC,WAAY,IAGhB,EAAKlC,MAAMmC,KAAO,CACd,CACIC,KAAK,YACLX,IAAI,OAER,CACIW,KAAK,YACLX,IAAI,OAER,CACIW,KAAK,YACLX,IAAI,OAER,CACIW,KAAK,YACLX,IAAI,OAER,CACIW,KAAK,YACLX,IAAI,QA9BG,G,uCAmCnBtB,UAAA,SAAUkC,GACNhC,KAAKC,SAAS,CAAC4B,WAAYG,K,EAG/B5B,OAAA,WAAU,IAAD,OACL,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,MAEA,uBAAKa,UAAU,eACX,uBAAKA,UAAU,qBAEX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,oBACVjB,KAAKL,MAAMmC,KAAKlC,KAAI,SAACgB,EAAMM,GACxB,OAAO,uBAAKE,IAAKF,EAAOD,UAAW,EAAKtB,MAAMkC,WAAWE,MAAQnB,EAAKmB,KAAO,qCAAuC,8BAA+BZ,QAAS,kBAAM,EAAKrB,UAAUc,KAC5KA,EAAKmB,UAIlB,uBAAKd,UAAU,eACX,uBAAKA,UAAU,IACX,gBAAC,EAAD,CACIrB,IAAKI,KAAKL,MAAMkC,WAChBb,QAAShB,KAAKL,MAAMkC,WAAWT,a,GA5DjDE","file":"component---src-templates-game-tmc-map-js-d94148082500c68165df.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { graphql, StaticQuery } from 'gatsby'\r\nimport Img from \"gatsby-image\"\r\n\r\n\r\nclass ImgGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            map: {},\r\n            show: false\r\n        };\r\n    }\r\n\r\n    choiceMap(type){\r\n        this.setState({map: type});\r\n        this.controlShow(true)\r\n    }\r\n\r\n    controlShow(isShow){\r\n        this.setState({show: isShow});\r\n    }\r\n\r\n    render() {\r\n        // const strQuery = \"/^\"  +this.props.imgName + \"/\"\r\n        const strQuery = \"logo\"\r\n\r\n        return (\r\n\r\n\r\n            <StaticQuery\r\n                query={graphql`\r\n                    query {\r\n                        allImageSharp {\r\n                            edges {\r\n                            node {\r\n                                fluid(maxWidth: 512, quality: 100) {\r\n                                    aspectRatio\r\n                                    base64\r\n                                    originalName\r\n                                    src\r\n                                    srcSet\r\n                                }\r\n                            }\r\n                            }\r\n                        }\r\n                    }\r\n                `}\r\n\r\n                render={data => {\r\n                    const images = data.allImageSharp.edges.filter(\r\n                        edge =>\r\n                            edge.node.fluid.originalName.startsWith(this.props.imgName)\r\n\r\n                    )\r\n\r\n                    return <div>\r\n                        <div className=\"d-flex flex-wrap\">\r\n                            {images.map((node, index) => {\r\n                                return <div className=\"col-6 p-2\" onClick={() => this.choiceMap(node.node)}><Img key={index} fluid={node.node.fluid}  /></div>\r\n                            })}\r\n\r\n                        </div>\r\n                        {this.state.show &&\r\n                            <div id=\"popup1\" className=\"overlay\">\r\n                                <div className=\"popup\">\r\n                                    <div className=\"close\" onClick={() => this.controlShow(false)} >&times;</div>\r\n                                    <div className=\"content mt-5\">\r\n                                        <div>\r\n                                            <Img fluid={this.state.map.fluid} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }}\r\n            />\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ImgGrid\r\n","import React, { Component } from 'react'\r\nimport Layout from \"../components/layout\";\r\nimport ImgGrid from \"../components/img-grid\";\r\nimport {postsData} from \"../../data/tmc.js\";\r\nimport SEO from '../components/seo';\r\n\r\nclass GameTmc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            type_1: '',\r\n            type_2: '',\r\n            melee_1: '',\r\n            melee_2: '',\r\n            posts: postsData,\r\n            currentMap: {},\r\n        };\r\n\r\n        this.state.maps = [\r\n            {\r\n                name:\"Chương 33\",\r\n                key:\"c33\",\r\n            },\r\n            {\r\n                name:\"Chương 34\",\r\n                key:\"c34\",\r\n            },\r\n            {\r\n                name:\"Chương 36\",\r\n                key:\"c36\",\r\n            },\r\n            {\r\n                name:\"Chương 37\",\r\n                key:\"c37\",\r\n            },\r\n            {\r\n                name:\"Chương 38\",\r\n                key:\"c38\",\r\n            },\r\n        ]\r\n    }\r\n\r\n    choiceMap(post){\r\n        this.setState({currentMap: post});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <SEO />\r\n\r\n                <div className=\"m-auto main\">\r\n                    <div className=\"bg-white my-2 p-4\">\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2 skill_area\">\r\n                                {this.state.maps.map((node, index) => {\r\n                                    return <div key={index} className={this.state.currentMap.name == node.name ? 'p-2 border-bottom hero-item active' : 'p-2 border-bottom hero-item'} onClick={() => this.choiceMap(node)}>\r\n                                        {node.name}\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                            <div className=\"col-10 py-2\">\r\n                                <div className=\"\">\r\n                                    <ImgGrid\r\n                                        map={this.state.currentMap}\r\n                                        imgName={this.state.currentMap.key}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n  }\r\n\r\nexport default GameTmc\r\n"],"sourceRoot":""}